<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Core Variables
spd = 10;
hp = 10;
cooldown_hit = 100;

//Constant Variables
wpn_throw_wait = 0;
wpn_throw_num = 5;

//Autosetting or placeholder Variables
reloading = false;
bullets = magazine_size;
wait = 0;

//Weapon set and initialisation
wpn_melee = obj_machete;
wpn_ranged = obj_assaultrifle;
wpn_ranged_bullet = obj_bullet;
wpn_throw = obj_grenade;

instance_create(x,y,wpn_ranged);

//Weapon Variables
wpn_ranged_magazinesize = wpn_ranged.magazinesize;
wpn_ranged_reload = wpn_ranged.reload;
wpn_ranged_firewait = wpn_ranged.reload;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloading = false;
bullets = magazine_size;
with(obj_reloading) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait = max(wait-1,0);
cooldown_hit = max(cooldown_hit-1,0);

up = keyboard_check(ord("W"));
down = keyboard_check(ord("S"));
left = keyboard_check(ord("A"));
right = keyboard_check(ord("D"));
reload = keyboard_check(ord("R"));
melee = keyboard_check(vk_lshift);

if (reload and !reloading) {
    scr_reload();
}
if (melee and wait &lt;= 0) {
    instance_create(x,y,wpn_melee)
}

vspd = (down - up) * spd;
hspd = (right - left) * spd;

if (place_meeting(x+hspd,y,par_solid)) {
    while(!place_meeting(x+sign(hspd),y,par_solid)) {
        x += sign(hspd);
    }
    hspd = 0;
}
if (place_meeting(x,y+vspd,par_solid)) {
    while(!place_meeting(x,y+sign(vspd),par_solid)) {
        y += sign(vspd);
    }
    vspd = 0;
}

if (!global.playerdead) {
    x = median(0,x+hspd,room_width);
    y = median(0,y+vspd,room_height);
}

move_towards_point(mouse_x,mouse_y,0);
image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_zombie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (cooldown_hit &lt;= 0) {
    hp = max(hp - other.damage,0);
    cooldown_hit = 20;
}
if (hp &lt;= 0) {
    global.playerdead = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wait &lt;= 0 and grenades &gt; 0 and !global.playerdead) {
    instance_create(x,y,obj_grenade);
    grenades -= 1;
    wait = grenade_wait;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wait &lt;= 0 and !reloading and !global.playerdead) {
    instance_create(x,y,obj_bullet);
    bullets -= 1;
    if (bullets &lt;= 0) {
        scr_reload();
    }
    wait = shootwait;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_red);
draw_set_font(fnt_reload);
draw_text(x,y+48,"HP: " + string(hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
